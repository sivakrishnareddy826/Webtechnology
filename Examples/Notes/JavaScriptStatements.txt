JavaScript statements often start with a keyword to identify the JavaScript action to be performed.
Keyword	    Description
var	->      Declares a variable
let	->      Declares a block variable
const->     Declares a block constant
if ->       Marks a block of statements to be executed on a condition
switch->    Marks a block of statements to be executed in different cases
for ->	    Marks a block of statements to be executed in a loop
function->	Declares a function
return->	Exits a function
try->	    Implements error handling to a block of statements

Note: JavaScript keywords are reserved words. Reserved words cannot be used as names for variables.

JavaScript Values
The JavaScript syntax defines two types of values:

Fixed values
Variable values
Fixed values are called Literals.

Variable values are called Variables.

The two most important syntax rules for fixed values are:

1. Numbers are written with or without decimals:
2. Strings are text, written within double or single quotes

JavaScript Variables
In a programming language, variables are used to store data values.

JavaScript uses the keywords var, let and const to declare variables.

An equal sign is used to assign values to variables.

In this example, x is defined as a variable. Then, x is assigned (given) the value 6:

JavaScript Operators
JavaScript uses arithmetic operators ( + - * / ) to compute values:

JavaScript Expressions
An expression is a combination of values, variables, and operators, which computes to a value.

The computation is called an evaluation.

For example, 5 * 10 evaluates to 50:

JavaScript Keywords
JavaScript keywords are used to identify actions to be performed.

The let keyword tells the browser to create variables:
The var keyword also tells the browser to create variables:
JavaScript Comments
Not all JavaScript statements are "executed".

Code after double slashes // or between /* and */ is treated as a comment.

Comments are ignored, and will not be executed:

JavaScript and Camel Case
Historically, programmers have used different ways of joining multiple words into one variable name:

Hyphens:

first-name, last-name, master-card, inter-city.

Hyphens are not allowed in JavaScript. They are reserved for subtractions.
Underscore:

first_name, last_name, master_card, inter_city.

Upper Camel Case (Pascal Case):

FirstName, LastName, MasterCard, InterCity.

Lower Camel Case:

JavaScript programmers tend to use camel case that starts with a lowercase letter:

firstName, lastName, masterCard, interCity.